interface IProps {
  name: string
  color?: string
  height?: number
  width?: number
  isOpen?: boolean
  [x: string]: any
}

const Icon = ({ name, color, circleColor, arrowColor, height, isOpen, className, width, ...rest }: IProps) => {
  switch (name) {
    case 'delete':
      return (
        <svg
          className={className}
          role="button"
          tabIndex={0}
          aria-labelledby="delete-icon-title"
          x="0px"
          y="0px"
          viewBox="0 0 268.476 268.476"
          style={{ height: `${height}rem` }}
          {...rest}
        >
          <title id="delete-icon-title">Delete</title>
          <g>
            <path
              style={{ fillRule: 'evenodd', clipRule: 'evenodd', fill: `${color}` }}
              d="M63.119,250.254c0,0,3.999,18.222,24.583,18.222h93.072c20.583,0,24.582-18.222,24.582-18.222l18.374-178.66H44.746L63.119,250.254z M170.035,98.442c0-4.943,4.006-8.949,8.949-8.949c4.943,0,8.95,4.006,8.95,8.949l-8.95,134.238c0,4.943-4.007,8.949-8.949,8.949c-4.942,0-8.949-4.007-8.949-8.949L170.035,98.442zM125.289,98.442c0-4.943,4.007-8.949,8.949-8.949c4.943,0,8.949,4.006,8.949,8.949v134.238c0,4.943-4.006,8.949-8.949,8.949c-4.943,0-8.949-4.007-8.949-8.949V98.442z M89.492,89.492c4.943,0,8.949,4.006,8.949,8.949l8.95,134.238c0,4.943-4.007,8.949-8.95,8.949c-4.942,0-8.949-4.007-8.949-8.949L80.543,98.442C80.543,93.499,84.55,89.492,89.492,89.492zM218.36,35.811h-39.376V17.899C178.984,4.322,174.593,0,161.086,0L107.39,0C95.001,0,89.492,6.001,89.492,17.899v17.913H50.116c-7.914,0-14.319,6.007-14.319,13.43c0,7.424,6.405,13.431,14.319,13.431H218.36c7.914,0,14.319-6.007,14.319-13.431C232.679,41.819,226.274,35.811,218.36,35.811z M161.086,35.811h-53.695l0.001-17.913h53.695V35.811z"
            />
          </g>
        </svg>
      )

    case 'arrow':
      return (
        <svg
          className={className}
          viewBox="0 0 20 20"
          preserveAspectRatio="none"
          width={16}
          fill="transparent"
          stroke="#979797"
          strokeWidth="1.1px"
          transform={isOpen ? 'rotate(180)' : ''}
        >
          <path d="M1,6 L10,15 L19,6" />
        </svg>
      )

    case 'x':
      return (
        <svg
          className={className}
          viewBox="0 0 20 20"
          preserveAspectRatio="none"
          width={12}
          fill="transparent"
          stroke="#979797"
          strokeWidth="1.1px"
        >
          <path d="M1,1 L19,19" />
          <path d="M19,1 L1,19" />
        </svg>
      )
    case 'close-circle':
      return (
        <svg className={className} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
          <path d="M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm1.41-1.41A8 8 0 1 0 15.66 4.34 8 8 0 0 0 4.34 15.66zm9.9-8.49L11.41 10l2.83 2.83-1.41 1.41L10 11.41l-2.83 2.83-1.41-1.41L8.59 10 5.76 7.17l1.41-1.41L10 8.59l2.83-2.83 1.41 1.41z" />
        </svg>
      )
    case 'close':
      return (
        <svg className={className} xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
          <path d="M10 8.586L2.929 1.515 1.515 2.929 8.586 10l-7.071 7.071 1.414 1.414L10 11.414l7.071 7.071 1.414-1.414L11.414 10l7.071-7.071-1.414-1.414L10 8.586z" />
        </svg>
      )

    case 'back':
      return (
        <svg
          className={className}
          width="512"
          height="512"
          viewBox="0 0 512 512"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <rect width="512" height="512" fill="black" fillOpacity="0" />
          <circle cx="256" cy="256" r="256" fill={circleColor} />
          <rect width="358.4" height="302.193" fill="black" fillOpacity="0" transform="translate(83.6265 104.96)" />
          <rect x="93.0132" y="234.667" width="349.013" height="42.6667" rx="21.3333" fill={arrowColor} />
          <rect
            x="83.6265"
            y="255.809"
            width="213.333"
            height="42.6667"
            rx="21.3333"
            transform="rotate(-45 83.6265 255.809)"
            fill={arrowColor}
          />
          <rect
            x="113.796"
            y="226.133"
            width="213.333"
            height="42.6667"
            rx="21.3333"
            transform="rotate(45 113.796 226.133)"
            fill={arrowColor}
          />
        </svg>
      )
    case 'link':
      return (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          height={height}
          width={width || height}
          className={`icon-link ${className}`}
        >
          <path
            className="secondary"
            d="M19.48 13.03l-.02-.03a1 1 0 1 1 1.75-.98A6 6 0 0 1 16 21h-4a6 6 0 1 1 0-12h1a1 1 0 0 1 0 2h-1a4 4 0 1 0 0 8h4a4 4 0 0 0 3.48-5.97z"
          />
          <path
            className="primary"
            d="M4.52 10.97l.02.03a1 1 0 1 1-1.75.98A6 6 0 0 1 8 3h4a6 6 0 1 1 0 12h-1a1 1 0 0 1 0-2h1a4 4 0 1 0 0-8H8a4 4 0 0 0-3.48 5.97z"
          />
        </svg>
      )
    case 'heart':
      return (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          height={height}
          width={width || height}
          className={`icon-heart ${className}`}
        >
          <circle cx="12" cy="12" r="10" className="primary" />
          <path
            className="secondary"
            d="M12.88 8.88a3 3 0 1 1 4.24 4.24l-4.41 4.42a1 1 0 0 1-1.42 0l-4.41-4.42a3 3 0 1 1 4.24-4.24l.88.88.88-.88z"
          />
        </svg>
      )
    case 'airplane':
      return (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          height={height}
          width={width || height}
          className={`icon-airplane ${className}`}
        >
          <path
            className="secondary"
            d="M19 11.9l2.7 1.14c.18.08.3.26.3.46v2a.5.5 0 0 1-.6.49L12 14 2.6 16a.5.5 0 0 1-.6-.49v-2c0-.2.12-.38.3-.46L5 11.9V10a1 1 0 1 1 2 0v1.06l4.8-2.02a.5.5 0 0 1 .4 0l4.8 2.02V10a1 1 0 0 1 2 0v1.9z"
          />
          <path className="primary" d="M12 2a2 2 0 0 1 2 2v8l-1 8h-2l-1-8V4c0-1.1.9-2 2-2z" />
          <path
            className="secondary"
            d="M8.64 22.98c-.32.1-.64-.17-.64-.54v-1.1c0-.19.08-.35.2-.46l3.5-2.78c.18-.13.42-.13.6 0l3.5 2.78c.12.1.2.27.2.45v1.11c0 .37-.32.64-.64.54L12 21.9l-3.36 1.07z"
          />
        </svg>
      )
    case 'medal':
      return (
        <svg
          height={height}
          width={width || height}
          viewBox="0 0 15 30"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          className={`icon-medal ${className}`}
        >
          <path
            className="secondary"
            fillRule="evenodd"
            clipRule="evenodd"
            d="M12.1214 0H0.130706V11.9783H0.118498L0.130706 11.9858V11.9907H0.138713L5.76686 15.4374L4.64943 18.4531L0 18.4909L3.73686 20.9916L2.33993 25L6.126 22.5605L9.91208 25L8.51515 20.9916L12.252 18.4909L7.60258 18.4531L6.48511 15.4372L12.1131 11.9907H12.1214V11.9856L12.1333 11.9783H12.1214V0ZM4.83819 11.9783H4.83749V1.0405H7.46355V11.9907H7.46425V13.7248H4.83819V11.9783ZM4.84228 13.7249L6.15103 14.4681L7.45979 13.7249L4.84228 13.7249Z"
          />
        </svg>
      )
    case 'user-couple':
      return (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          height={height}
          width={width || height}
          className={`icon-user-couple ${className}`}
        >
          <path
            className="primary"
            d="M15 11a4 4 0 1 1 0-8 4 4 0 0 1 0 8zm7 8a2 2 0 0 1-2 2H10a2 2 0 0 1-2-2v-1a5 5 0 0 1 5-5h4a5 5 0 0 1 5 5v1z"
          />
          <path
            className="secondary"
            d="M9 11a4 4 0 1 1 0-8 4 4 0 0 1 0 8zm7 8a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-1a5 5 0 0 1 5-5h4a5 5 0 0 1 5 5v1z"
          />
        </svg>
      )
    case 'chat-group-alt':
      return (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          height={height}
          width={width || height}
          className={`icon-chat-group-alt ${className}`}
        >
          <rect width="16" height="13" x="2" y="2" className="secondary" rx="2" />
          <path
            className="primary"
            d="M6 16V8c0-1.1.9-2 2-2h12a2 2 0 0 1 2 2v13a1 1 0 0 1-1.7.7L16.58 18H8a2 2 0 0 1-2-2z"
          />
        </svg>
      )
    case 'chevron-right-circle':
      return (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          height={height}
          width={width || height}
          className={`icon-chevron-right-circle ${className}`}
        >
          <circle cx="12" cy="12" r="10" className="primary" />
          <path
            className="secondary"
            d="M10.3 8.7a1 1 0 0 1 1.4-1.4l4 4a1 1 0 0 1 0 1.4l-4 4a1 1 0 0 1-1.4-1.4l3.29-3.3-3.3-3.3z"
          />
        </svg>
      )
    case 'chevron-right':
      return (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          height={height}
          width={width || height}
          className={`icon-chevron-right ${className}`}
        >
          <path
            className="secondary"
            d="M10.3 8.7a1 1 0 0 1 1.4-1.4l4 4a1 1 0 0 1 0 1.4l-4 4a1 1 0 0 1-1.4-1.4l3.29-3.3-3.3-3.3z"
          />
        </svg>
      )
    case 'chevron-down':
      return (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          height={height}
          width={width || height}
          className={`icon-chevron-down ${className}`}
        >
          <path
            className="secondary"
            d="M15.3 10.3a1 1 0 0 1 1.4 1.4l-4 4a1 1 0 0 1-1.4 0l-4-4a1 1 0 0 1 1.4-1.4l3.3 3.29 3.3-3.3z"
          />
        </svg>
      )
    case 'circle':
      return (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          height={height}
          width={width || height}
          className={`icon-circle ${className}`}
        >
          <circle cx="12" cy="12" r="10" className="circle" />
        </svg>
      )

    case 'menu':
      return (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          className={`icon-menu ${className}`}
          height={height}
          width={width || height}
          {...rest}
        >
          <path
            className="secondary"
            fillRule="evenodd"
            d="M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z"
          />
        </svg>
      )

    case '4HMilitaryPartnership':
      return (
        <svg
          width="695"
          height="70"
          viewBox="0 0 695 70"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          className={className}
        >
          <g filter="url(#filter0_d)">
            <path
              d="M2.62 33.624L17.376 10.374L27.606 9.134L26.738 33.128L32.69 32.88L32.07 39.142L27.11 39.018L27.482 49H18.802L19.422 38.894L2.124 38.956L2.62 33.624ZM19.236 17.132L9.378 33.066L19.546 33.004L19.236 17.132ZM40.5422 36.972L40.0462 31.33L54.6782 28.726L55.1742 34.368L40.5422 36.972ZM97.7712 5.91L96.9032 32.88L97.6472 49H88.9672L89.7112 33.934L89.5872 30.648H72.9092L72.8472 32.88L73.5912 49H64.9112L65.6552 33.934L64.9112 7.46L73.7152 5.91L73.0952 24.076H89.4012L88.9672 7.46L97.7712 5.91ZM143.264 29.656H143.884L152.936 6.096L161.492 6.344L161.74 33.004L162.918 49H154.548L154.858 32.88L154.176 16.574L146.736 37.096L139.11 37.468L132.166 16.574L131.608 32.88L132.042 49H124.354L125.222 33.934L125.594 7.336L135.452 5.786L143.264 29.656ZM182.547 17.442L181.803 32.88L182.485 47.45L174.177 49L174.921 33.934L174.239 18.992L182.547 17.442ZM173.805 8.39C173.805 6.98467 174.342 5.74467 175.417 4.67C176.491 3.554 177.731 2.996 179.137 2.996C180.542 2.996 181.617 3.38866 182.361 4.174C183.105 4.918 183.477 6.05466 183.477 7.584C183.477 9.11333 182.939 10.436 181.865 11.552C180.831 12.6267 179.612 13.164 178.207 13.164C176.843 13.164 175.768 12.7093 174.983 11.8C174.197 10.8907 173.805 9.754 173.805 8.39ZM201.869 1.012L201.063 32.88L201.745 47.45L193.375 49L194.119 33.934L193.375 2.562L201.869 1.012ZM221.365 17.442L220.621 32.88L221.303 47.45L212.995 49L213.739 33.934L213.057 18.992L221.365 17.442ZM212.623 8.39C212.623 6.98467 213.16 5.74467 214.235 4.67C215.31 3.554 216.55 2.996 217.955 2.996C219.36 2.996 220.435 3.38866 221.179 4.174C221.923 4.918 222.295 6.05466 222.295 7.584C222.295 9.11333 221.758 10.436 220.683 11.552C219.65 12.6267 218.43 13.164 217.025 13.164C215.661 13.164 214.586 12.7093 213.801 11.8C213.016 10.8907 212.623 9.754 212.623 8.39ZM234.612 18.992V12.234L242.982 10.622L242.176 18.992H249.678L248.996 24.076H241.928L241.618 37.034C241.618 38.9767 241.804 40.2787 242.176 40.94C242.548 41.56 243.23 41.87 244.222 41.87C245.214 41.87 246.536 41.6427 248.19 41.188L248.562 45.59C245.834 47.8633 243.436 49 241.37 49C239.303 49 237.608 48.256 236.286 46.768C234.963 45.2387 234.302 43.2547 234.302 40.816L234.674 33.872L234.612 24.076H230.334L231.016 18.992H234.612ZM264.433 49C261.994 49 259.989 48.2353 258.419 46.706C256.889 45.1353 256.125 43.048 256.125 40.444C256.125 37.7987 257.323 35.5253 259.721 33.624C262.118 31.6813 265.032 30.71 268.463 30.71H272.679V29.656C272.679 27.6307 272.265 26.246 271.439 25.502C270.612 24.758 269.062 24.386 266.789 24.386C265.838 24.386 264.701 24.5927 263.379 25.006C262.097 25.378 260.651 25.9773 259.039 26.804L257.241 21.906C259.018 20.666 261.167 19.55 263.689 18.558C266.251 17.566 268.359 17.07 270.013 17.07C276.502 17.07 279.747 20.2113 279.747 26.494V38.646C279.747 40.9607 280.47 43.544 281.917 46.396L275.345 49.186C274.311 47.202 273.547 45.4247 273.051 43.854C270.777 47.2847 267.905 49 264.433 49ZM267.037 42.676C268.69 42.676 270.571 41.8287 272.679 40.134V35.98C270.488 35.484 268.711 35.236 267.347 35.236C264.743 35.236 263.441 36.3933 263.441 38.708C263.441 39.9067 263.771 40.878 264.433 41.622C265.094 42.3247 265.962 42.676 267.037 42.676ZM290.613 19.054L298.115 17.442C298.487 20.6247 298.735 23.642 298.859 26.494C302.621 20.666 306.155 17.752 309.461 17.752L308.779 27.424C306.382 27.424 304.481 27.6513 303.075 28.106C301.711 28.5193 300.306 29.3667 298.859 30.648V32.88L299.541 47.45L291.233 49L291.977 33.934C291.812 28.3953 291.357 23.4353 290.613 19.054ZM318.263 60.966L324.649 46.644L320.061 34.12L313.799 19.054L322.045 17.504L326.013 30.71L328.059 36.972H328.865L330.353 32.446L334.817 17.442L342.443 18.372L331.469 47.202L326.261 62.64L318.263 60.966ZM378.6 6.22C382.568 6.22 385.73 7.35666 388.086 9.63C390.442 11.862 391.62 14.9413 391.62 18.868C391.62 22.7947 390.132 26.1633 387.156 28.974C384.18 31.7433 380.542 33.128 376.244 33.128H372.71L373.454 49H365.146L365.89 33.934L365.146 6.22H378.6ZM376.368 12.482H373.33L372.896 27.114H377.112C379.178 27.114 380.77 26.432 381.886 25.068C383.043 23.704 383.622 21.7613 383.622 19.24C383.622 14.7347 381.204 12.482 376.368 12.482ZM405.526 49C403.088 49 401.083 48.2353 399.512 46.706C397.983 45.1353 397.218 43.048 397.218 40.444C397.218 37.7987 398.417 35.5253 400.814 33.624C403.212 31.6813 406.126 30.71 409.556 30.71H413.772V29.656C413.772 27.6307 413.359 26.246 412.532 25.502C411.706 24.758 410.156 24.386 407.882 24.386C406.932 24.386 405.795 24.5927 404.472 25.006C403.191 25.378 401.744 25.9773 400.132 26.804L398.334 21.906C400.112 20.666 402.261 19.55 404.782 18.558C407.345 17.566 409.453 17.07 411.106 17.07C417.596 17.07 420.84 20.2113 420.84 26.494V38.646C420.84 40.9607 421.564 43.544 423.01 46.396L416.438 49.186C415.405 47.202 414.64 45.4247 414.144 43.854C411.871 47.2847 408.998 49 405.526 49ZM408.13 42.676C409.784 42.676 411.664 41.8287 413.772 40.134V35.98C411.582 35.484 409.804 35.236 408.44 35.236C405.836 35.236 404.534 36.3933 404.534 38.708C404.534 39.9067 404.865 40.878 405.526 41.622C406.188 42.3247 407.056 42.676 408.13 42.676ZM431.707 19.054L439.209 17.442C439.581 20.6247 439.829 23.642 439.953 26.494C443.714 20.666 447.248 17.752 450.555 17.752L449.873 27.424C447.476 27.424 445.574 27.6513 444.169 28.106C442.805 28.5193 441.4 29.3667 439.953 30.648V32.88L440.635 47.45L432.327 49L433.071 33.934C432.906 28.3953 432.451 23.4353 431.707 19.054ZM460.907 18.992V12.234L469.277 10.622L468.471 18.992H475.973L475.291 24.076H468.223L467.913 37.034C467.913 38.9767 468.099 40.2787 468.471 40.94C468.843 41.56 469.525 41.87 470.517 41.87C471.509 41.87 472.831 41.6427 474.485 41.188L474.857 45.59C472.129 47.8633 469.731 49 467.665 49C465.598 49 463.903 48.256 462.581 46.768C461.258 45.2387 460.597 43.2547 460.597 40.816L460.969 33.872L460.907 24.076H456.629L457.311 18.992H460.907ZM502.508 33.314C502.508 30.462 502.26 28.5607 501.764 27.61C501.268 26.6593 500.11 26.184 498.292 26.184C496.473 26.184 494.406 26.9073 492.092 28.354V32.88L492.774 47.45L484.466 49L485.21 33.934C485.044 28.3953 484.59 23.4353 483.846 19.054L491.348 17.442C491.637 19.8393 491.844 22.1747 491.968 24.448C492.588 23.6213 493.29 22.8153 494.076 22.03C494.861 21.2033 496.101 20.294 497.796 19.302C499.49 18.2687 501.268 17.752 503.128 17.752C505.029 17.752 506.62 18.496 507.902 19.984C509.183 21.4307 509.824 23.4147 509.824 25.936L509.452 32.88L510.134 47.76L501.764 49.31L502.508 33.314ZM532.141 42.676C533.339 42.676 534.6 42.366 535.923 41.746C537.245 41.126 538.279 40.506 539.023 39.886L540.139 38.956L542.991 42.428C542.577 43.1307 541.937 43.9367 541.069 44.846C540.201 45.7553 539.312 46.5407 538.403 47.202C537.535 47.822 536.357 48.4007 534.869 48.938C533.422 49.434 531.913 49.682 530.343 49.682C526.995 49.682 524.267 48.4213 522.159 45.9C520.051 43.3373 518.997 40.0513 518.997 36.042C518.997 30.9993 520.464 26.5767 523.399 22.774C526.333 18.9713 529.764 17.07 533.691 17.07C536.708 17.07 539.043 17.9173 540.697 19.612C542.391 21.3067 543.239 23.6833 543.239 26.742C543.239 28.5607 542.929 30.6273 542.309 32.942L541.069 34.244L525.569 35.67C526.271 40.3407 528.462 42.676 532.141 42.676ZM532.141 23.456C530.322 23.456 528.793 24.2 527.553 25.688C526.313 27.1347 525.589 28.9947 525.383 31.268L535.923 29.966C536.047 29.0153 536.109 28.23 536.109 27.61C536.109 24.8407 534.786 23.456 532.141 23.456ZM551.969 19.054L559.471 17.442C559.843 20.6247 560.091 23.642 560.215 26.494C563.976 20.666 567.51 17.752 570.817 17.752L570.135 27.424C567.737 27.424 565.836 27.6513 564.431 28.106C563.067 28.5193 561.661 29.3667 560.215 30.648V32.88L560.897 47.45L552.589 49L553.333 33.934C553.167 28.3953 552.713 23.4353 551.969 19.054ZM588.112 43.234C590.262 43.234 591.336 42.2833 591.336 40.382C591.336 39.7207 590.861 39.1007 589.91 38.522C589.001 37.9433 587.864 37.3647 586.5 36.786C585.178 36.2073 583.834 35.5667 582.47 34.864C581.148 34.12 580.011 33.1073 579.06 31.826C578.151 30.5447 577.696 29.0773 577.696 27.424C577.696 24.6547 578.916 22.2367 581.354 20.17C583.793 18.1033 586.604 17.07 589.786 17.07C591.274 17.07 592.721 17.256 594.126 17.628C595.573 17.9587 596.958 18.496 598.28 19.24L594.126 26.804C593.837 26.556 593.465 26.246 593.01 25.874C592.556 25.502 591.688 25.0267 590.406 24.448C589.166 23.828 588.05 23.518 587.058 23.518C586.108 23.518 585.364 23.7453 584.826 24.2C584.33 24.6133 584.082 25.2127 584.082 25.998C584.082 26.742 584.785 27.5067 586.19 28.292C587.637 29.036 589.208 29.7387 590.902 30.4C592.597 31.02 594.147 32.074 595.552 33.562C596.999 35.0087 597.722 36.7447 597.722 38.77C597.722 41.6633 596.524 44.2053 594.126 46.396C591.77 48.5867 589.042 49.682 585.942 49.682C583.958 49.682 582.098 49.248 580.362 48.38C578.668 47.512 577.448 46.644 576.704 45.776L575.588 44.474L580.486 38.77C580.734 39.1007 581.086 39.514 581.54 40.01C581.995 40.506 582.884 41.1673 584.206 41.994C585.57 42.8207 586.872 43.234 588.112 43.234ZM625.255 33.314C625.255 30.462 625.007 28.5607 624.511 27.61C624.015 26.6593 622.857 26.184 621.039 26.184C619.22 26.184 617.153 26.9073 614.839 28.354V32.88L615.521 47.45L607.151 49L607.895 33.934L607.151 2.562L615.645 1.012L614.839 17.07V24.324C615.459 23.4973 616.161 22.6913 616.947 21.906C617.732 21.1207 618.951 20.232 620.605 19.24C622.258 18.248 624.015 17.752 625.875 17.752C627.776 17.752 629.367 18.496 630.649 19.984C631.93 21.4307 632.571 23.4147 632.571 25.936L632.199 32.88L632.881 47.76L624.511 49.31L625.255 33.314ZM652.033 17.442L651.289 32.88L651.971 47.45L643.663 49L644.407 33.934L643.725 18.992L652.033 17.442ZM643.291 8.39C643.291 6.98467 643.828 5.74467 644.903 4.67C645.978 3.554 647.218 2.996 648.623 2.996C650.028 2.996 651.103 3.38866 651.847 4.174C652.591 4.918 652.963 6.05466 652.963 7.584C652.963 9.11333 652.426 10.436 651.351 11.552C650.318 12.6267 649.098 13.164 647.693 13.164C646.329 13.164 645.254 12.7093 644.469 11.8C643.684 10.8907 643.291 9.754 643.291 8.39ZM679.416 17.69C682.061 17.69 684.272 18.8473 686.05 21.162C687.868 23.4767 688.778 26.5973 688.778 30.524C688.778 36.0213 687.352 40.4853 684.5 43.916C681.689 47.3053 678.176 49 673.96 49C673.092 49 672.12 48.938 671.046 48.814L671.356 60.656L662.862 62.206L663.668 33.934H663.73C663.564 28.3953 663.11 23.4353 662.366 19.054L669.868 17.442C670.116 19.6327 670.322 21.8027 670.488 23.952C670.57 23.7453 670.984 23.1873 671.728 22.278C672.513 21.3273 673.65 20.3353 675.138 19.302C676.626 18.2273 678.052 17.69 679.416 17.69ZM676.998 25.75C674.807 25.75 672.678 26.3493 670.612 27.548V32.88L670.86 41.746C673.092 42.118 674.786 42.304 675.944 42.304C679.912 42.304 681.896 39.5553 681.896 34.058C681.896 28.5193 680.263 25.75 676.998 25.75Z"
              fill="white"
            />
          </g>
          <defs>
            <filter
              id="filter0_d"
              x="0.124023"
              y="0.0120239"
              width="694.654"
              height="69.628"
              filterUnits="userSpaceOnUse"
              color-interpolation-filters="sRGB"
            >
              <feFlood flood-opacity="0" result="BackgroundImageFix" />
              <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" />
              <feOffset dx="2" dy="3" />
              <feGaussianBlur stdDeviation="2" />
              <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0" />
              <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow" />
              <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape" />
            </filter>
          </defs>
        </svg>
      )
    default:
      return null
  }
}

export default Icon
